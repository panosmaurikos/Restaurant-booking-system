name: Nmap Security Scan

on:
  workflow_call:

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and start services
        run: docker compose -f docker-compose.yml up -d --build

      - name: Wait for app to be ready
        run: |
          echo "Waiting for app to start..."
          for i in {1..15}; do
            if curl -s http://localhost:8080 >/dev/null; then
              echo "App is up!"
              exit 0
            fi
            echo "Still waiting..."
            sleep 5
          done
          echo "App did not start in time" >&2
          docker compose logs
          exit 1

      - name: Run comprehensive Nmap security scan
        run: |
            # Create a directory for nmap results
            mkdir -p nmap-results
            sudo chmod 777 nmap-results

            # Run nmap with volume mounting
            docker run --network=host \
            -v $(pwd)/nmap-results:/results \
            instrumentisto/nmap \
            -sS -sV -sC -O -T4 -v -p- \
            -oX /results/nmap-full-scan.xml \
            -oN /results/nmap-full-scan.txt \
            localhost

      - name: Run targeted vulnerability scans
        run: |
             sudo chmod 777 nmap-results
             docker run --network=host -v $(pwd)/nmap-results:/results instrumentisto/nmap --script vulners,http-enum,http-security-headers -p 8080,8081 -oX /results/nmap-web-scan.xml -oN /results/nmap-web-scan.txt localhost

             docker run --network=host -v $(pwd)/nmap-results:/results instrumentisto/nmap --script pgsql-brute -p 5432 -oX /results/nmap-pgsql-scan.xml -oN /results/nmap-pgsql-scan.txt localhost

             docker run --network=host -v $(pwd)/nmap-results:/results instrumentisto/nmap --script redis-info -p 6379 -oX /results/nmap-redis-scan.xml -oN /results/nmap-redis-scan.txt localhost

      - name: Verify scan files were created
        run: |
          echo "=== Checking for scan files ==="
          sudo chmod -R 777 nmap-results
          sudo chown -R $USER:$USER nmap-results
          ls -la nmap-results/
          
          # Copy files to root for easier access
          cp nmap-results/* .
          
          echo "✅ All scan files:"
          ls -la *.xml *.txt

      - name: Generate comprehensive HTML reports
        run: |
            sudo apt-get install -y xsltproc pandoc curl
            curl -s https://svn.nmap.org/nmap/docs/nmap.xsl -o nmap.xsl
            
            xsltproc -o nmap-app-report.html nmap.xsl nmap-app-scan.xml
            xsltproc -o nmap-web-report.html nmap.xsl nmap-web-scan.xml
            xsltproc -o nmap-pgsql-report.html nmap.xsl nmap-pgsql-scan.xml
            xsltproc -o nmap-redis-report.html nmap.xsl nmap-redis-scan.xml

            cat > security-summary.md << EOF
                # 🛡️ Application Security Scan Report

                ## 📅 Scan Date: $(date)
                ## 🎯 Target: localhost

                ## 📊 Application Ports Scan
                \`\`\`bash
                $(grep "open" nmap-app-scan.txt | sort -n)
                \`\`\`

                ## 🌐 Web Application Security
                \`\`\`bash
                $(grep -A2 -B2 "http\|Server\|X-" nmap-web-scan.txt | head -10 || echo "Web services detected")
                \`\`\`

                ## 🗄️ Database Services
                **PostgreSQL:**
                \`\`\`bash
                $(grep -A3 -B3 "5432\|PostgreSQL" nmap-pgsql-scan.txt || echo "PostgreSQL service running")
                \`\`\`

                **Redis:**
                \`\`\`bash
                $(grep -A3 -B3 "6379\|Redis" nmap-redis-scan.txt || echo "Redis service running")
                \`\`\`

                ## ⚡ Quick Stats
                - **Open Ports**: $(grep -c "open" nmap-app-scan.txt)
                - **Services Scanned**: 4 targeted scans
            EOF

                    pandoc security-summary.md -o security-summary.html --self-contained --css=https://cdn.jsdelivr.net/npm/water.css@2/out/water.css
      - name: Upload comprehensive reports
        uses: actions/upload-artifact@v4
        with:
            name: security-scan-reports-$(date +%Y%m%d-%H%M%S)
            path: |
              nmap-*.xml
              nmap-*.txt
              *-report.html
              security-summary.*
              nmap-results/

      - name: Display security summary
        run: |
            echo "🔒 APPLICATION SECURITY SCAN COMPLETED 🔒"
            echo "=========================================="
            echo "📊 Open ports found:"
            grep "open" nmap-app-scan.txt | sort -n
            echo ""
            echo "🌐 Web server info:"
            grep -i "server\|http" nmap-web-scan.txt | head -5
            echo ""
            echo "🗄️ Database info:"
            grep -A2 -B2 "Redis\|PostgreSQL" nmap-pgsql-scan.txt nmap-redis-scan.txt 2>/dev/null | head -5 || echo "Database services running"
            echo ""
            echo "📁 Full security reports available as artifacts"

      - name: Stop services
        run: docker compose -f docker-compose.yml down
