name: DevSecOps - SonarQube

on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: false  # Δεν είναι υποχρεωτικό αν δημιουργούμε token δυναμικά

permissions:
  contents: read
  security-events: write

jobs:
  sonarqube:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Start SonarQube in Docker and create CI token
        run: |
          docker run -d --name sonarqube \
            -p 9000:9000 \
            sonarqube:lts-community
          echo "Waiting for SonarQube to be ready..."
          for i in {1..30}; do
            if curl -s http://localhost:9000/api/system/status | grep -q '"UP"'; then
              echo "SonarQube is UP!"
              break
            fi
            echo "Waiting..."
            sleep 10
          done

          # Δημιουργία token μέσω API
          echo "Generating Sonar token via API..."
          resp=$(curl -s -u admin:admin -X POST "http://localhost:9000/api/user_tokens/generate" -d "name=ci-token")
          echo "API response: $resp"
          SONAR_CI_TOKEN=$(echo "$resp" | sed -n 's/.*"token":"\([^"]*\)".*/\1/p')
          if [ -z "$SONAR_CI_TOKEN" ]; then
            echo "Failed to create Sonar token. Response:"
            echo "$resp"
            exit 1
          fi
          echo "Got token, will use it for analysis."
          echo "SONAR_CI_TOKEN=$SONAR_CI_TOKEN" >> $GITHUB_ENV

      - name: Debug SONAR token
        run: |
          if [ -z "$SONAR_CI_TOKEN" ] && [ -z "$SONAR_TOKEN" ]; then
            echo "No token available (SONAR_CI_TOKEN or SONAR_TOKEN)"
            exit 1
          fi
          echo "Using SONAR_CI_TOKEN or secret SONAR_TOKEN"

      - name: Run SonarQube scan for backend (Maven project)
        env:
          SONAR_HOST_URL: http://localhost:9000
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd RestaurantBookSystem
          TOKEN="${SONAR_CI_TOKEN:-$SONAR_TOKEN}"
          mvn -B -DskipTests verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=restaurant-backend \
            -Dsonar.projectName="Restaurant Backend" \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login="$TOKEN"