name: DevSecOps - SonarQube

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  sonarqube-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Start SonarQube in Docker
        run: |
          docker run -d --name sonarqube \
            -p 9000:9000 \
            sonarqube:lts-community
          echo "Waiting for SonarQube to be ready..."
          for i in {1..30}; do
            if curl -s http://localhost:9000/api/system/status | grep -q '"UP"'; then
              echo "SonarQube is UP!"
              break
            fi
            echo "Waiting..."
            sleep 10
          done

      - name: Install SonarScanner CLI
        run: |
          npm install -g sonar-scanner

      - name: Run SonarQube scan for backend (Maven project)
        env:
          SONAR_HOST_URL: http://localhost:9000
          SONAR_TOKEN: ${{ secrets.GithubTokenSonar }}
        run: |
          cd RestaurantBookSystem
          mvn -B -DskipTests verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=restaurant-backend \
            -Dsonar.projectName="Restaurant Backend" \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN

      - name: Run SonarQube scan for frontend (JS/HTML)
        env:
          SONAR_HOST_URL: http://localhost:9000
          SONAR_TOKEN: ${{ secrets.GithubTokenSonar }}
        run: |
          cd RestaurantFrontEndSystem
          sonar-scanner \
            -Dsonar.projectKey=restaurant-frontend \
            -Dsonar.projectName="Restaurant Frontend" \
            -Dsonar.sources=. \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN

      - name: Stop SonarQube
        run: docker stop sonarqube && docker rm sonarqube
